image:
  # -- The repository for mealie.
  repository: ghcr.io/mealie-recipes/mealie
    # -- The repository for postgres.
  postgresRepo: postgres
  # -- The pull policy for mealie and postgres images.
  pullPolicy: Always
  # -- The tag for the mealie
  tag: "v2.8.0"
  # -- Which version of postgres to use if enabled.
  pgtag: "15"

# @ ignore
imagePullSecrets: []
# @ignore
nameOverride: ""
# @ignore
fullnameOverride: ""
# @ignore
podAnnotations: {}
# @ignore
podSecurityContext:
  {}
  # fsGroup: 2000

# @ignore
securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

customLabels:
  mealie:
    mealie.is-api: "true"
    app.kubernetes.io/component: mealie
  postgres:
      mealie.postgres: "true"
      app: postgres-mealie

mealie:
  # -- The number of api replicas to run. Only set above 1 if using postgres.
  replicas: 1
  # -- Service Configuration for the mealie API service. Do not change without changing mealie environment variables.
  service:
    type: ClusterIP
    port: 9000

  # -- The initial delay for the liveness and readiness probes for mealie.
  initialDelaySeconds: 10

  # -- Mealie environment variables. Additional environment variables for mealie can be found at https://docs.mealie.io/documentation/getting-started/installation/backend-config/.
  env:
    - name: ALLOW_SIGNUP
      value: false
    - name: DEFAULT_GROUP
      value: HOME
    - name: DEFAULT_HOUSEHOLD
      value: FAMILY
    - name: SECURITY_MAX_LOGIN_ATTEMPTS
      value: 5
    - name: SECURITY_USER_LOCKOUT_TIME
      value: 24

    # -- Postgres Variables, to use postgres, change DB_ENGINE to postgres. The other variables are set to use the included postgres database by default.
    - name: DB_ENGINE
      value: sqlite
    - name: POSTGRES_USER
      value: mealie
    - name: POSTGRES_PASSWORD
      value: mealie
    - name: POSTGRES_SERVER
      value: postgres-mealie
    - name: POSTGRES_PORT
      value: 5432
    - name: POSTGRES_DB
      value: mealie

    # -- Optional OpenAI API configuration.
    - name: OPENAI_BASE_URL
      value: https://api.openai.com/v1
    - name: OPENAI_API_KEY
      value: INSERT_YOUR_OPENAI_API_KEY_HERE
    - name: OPENAI_MODEL
      value: gpt-4.1


postgres:
  # -- Set enabled to true if you want to use the included Postgres Database.
  enabled: false
  # @ignore
  service:
    type: ClusterIP
    port: 5432

  # -- The initial delay for the liveness and readiness probes for postgres.
  initialDelaySeconds: 10

# -- Postgres environment variables, leave PGDATA unchanged unless you know what you are doing.
  env:
  - name: PGDATA
    value: /var/lib/postgresql/data/pgdata
  - name: POSTGRES_USER
    value: mealie
  - name: POSTGRES_PASSWORD
    value: mealie
  - name: POSTGRES_DB
    value: mealie
  - name: PG_USER
    value: mealie

# @ignore
ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# @ignore
resources:
  {}

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# @ignore
nodeSelector: {}
# @ignore
tolerations: []
# @ignore
affinity: {}
storage:
  # -- Enable storage that isn't emphemeral.
  enabled: true
  # -- The storage class to use.
  className: ""
  # -- Size of storage to allocate for mealie.
  mealieSize: 4Gi
  # -- Size of storage to allocate for postgres.
  postgresSize: 8Gi
  # -- The access mode that is supported for Mealie.
  accessModeMealie: ReadWriteMany
  # -- The access mode that is supported for Postgres.
  accessModePostgres: ReadWriteMany
